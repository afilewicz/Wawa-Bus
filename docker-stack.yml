name: pis-24z
services:
  backend-api:
    build:
      context: /home/pawel/projekty/pis-24z/api
      dockerfile: Dockerfile
    depends_on:
      sql-db:
        condition: service_healthy
        required: true
    environment:
      BACKEND_CORS_ORIGINS: http://localhost,http://localhost:5173,https://localhost,https://localhost:5173
      DOCKER_IMAGE_BACKEND: localhost:5000/backend-api
      DOCKER_IMAGE_DATA_RETRIEVAL: localhost:5000/data-retrieval
      DOCKER_IMAGE_FRONTEND: localhost:5000/frontend
      DOMAIN: localhost
      FRONTEND_HOST: http://localhost:3000
      HEARTBEAT: "60"
      MONGO_DATABASE: warsaw-api-data
      MONGO_HOST: localhost
      MONGO_PASSWORD: password
      MONGO_USERNAME: admin
      POSTGRES_DB: app
      POSTGRES_HOST: localhost
      POSTGRES_PASSWORD: postgresqlpassword
      POSTGRES_PORT: "5432"
      POSTGRES_USER: postgres
      PROJECT_NAME: WawaBus
      SECRET_KEY: super
      SMTP_HOST: smtp.gmail.com
      SMTP_PASSWORD: gzevjgsqwctgmsbj
      SMTP_PORT: "587"
      SMTP_SSL: "False"
      SMTP_TLS: "True"
      SMTP_USER: papprojektbiblioteki@gmail.com
      WARSAW_API_KEY: 81658e47-99ea-4424-a3b4-c5228a8034aa
      WARSAW_API_URL: https://api.um.warszawa.pl/api
    healthcheck:
      test:
        - CMD
        - curl
        - -f
        - http://localhost:8000/api/v1/utils/health-check/
      timeout: 5s
      interval: 10s
      retries: 5
    image: localhost:5000/backend-api:latest
    networks:
      default: null
    ports:
      - mode: ingress
        target: 8000
        published: "8000"
        protocol: tcp
    restart: "no"
  data-retrieval:
    build:
      context: /home/pawel/projekty/pis-24z/data_retrieval
      dockerfile: Dockerfile
    depends_on:
      nosql-db:
        condition: service_healthy
        required: true
    environment:
      HEARTBEAT: "60"
      MONGO_DATABASE: warsaw-api-data
      MONGO_HOST: localhost
      MONGO_PASSWORD: password
      MONGO_PORT: ""
      MONGO_USERNAME: admin
      WARSAW_API_KEY: 81658e47-99ea-4424-a3b4-c5228a8034aa
      WARSAW_API_URL: https://api.um.warszawa.pl/api
    image: localhost:5000/data-retrieval:latest
    networks:
      default: null
    restart: "no"
  frontend:
    build:
      context: /home/pawel/projekty/pis-24z/frontend
      dockerfile: Dockerfile
    depends_on:
      backend-api:
        condition: service_healthy
        required: true
    environment:
      NODE_ENV: production
    healthcheck:
      test:
        - CMD
        - curl
        - -f
        - http://localhost:3000
      timeout: 5s
      interval: 10s
      retries: 5
    image: localhost:5000/frontend:latest
    networks:
      default: null
    ports:
      - mode: ingress
        target: 3000
        published: "3000"
        protocol: tcp
    restart: "no"
  nosql-db:
    environment:
      MONGO_INITDB_DATABASE: warsaw-api-data
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_ROOT_USERNAME: admin
    healthcheck:
      test:
        - CMD-SHELL
        - echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      timeout: 10s
      interval: 10s
      retries: 5
      start_period: 30s
    image: mongo:8.0
    networks:
      default: null
    ports:
      - mode: ingress
        target: 27017
        published: "27017"
        protocol: tcp
    restart: "no"
    volumes:
      - type: volume
        source: app-nosql-db-data
        target: /data/db
        volume: {}
  sql-db:
    environment:
      BACKEND_CORS_ORIGINS: http://localhost,http://localhost:5173,https://localhost,https://localhost:5173
      DOCKER_IMAGE_BACKEND: localhost:5000/backend-api
      DOCKER_IMAGE_DATA_RETRIEVAL: localhost:5000/data-retrieval
      DOCKER_IMAGE_FRONTEND: localhost:5000/frontend
      DOMAIN: localhost
      FRONTEND_HOST: http://localhost:3000
      HEARTBEAT: "60"
      MONGO_DATABASE: warsaw-api-data
      MONGO_HOST: localhost
      MONGO_PASSWORD: password
      MONGO_USERNAME: admin
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_DB: app
      POSTGRES_HOST: localhost
      POSTGRES_PASSWORD: postgresqlpassword
      POSTGRES_PORT: "5432"
      POSTGRES_USER: postgres
      PROJECT_NAME: WawaBus
      SECRET_KEY: super
      SMTP_HOST: smtp.gmail.com
      SMTP_PASSWORD: gzevjgsqwctgmsbj
      SMTP_PORT: "587"
      SMTP_SSL: "False"
      SMTP_TLS: "True"
      SMTP_USER: papprojektbiblioteki@gmail.com
      WARSAW_API_KEY: 81658e47-99ea-4424-a3b4-c5228a8034aa
      WARSAW_API_URL: https://api.um.warszawa.pl/api
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U postgres -d app
      timeout: 10s
      interval: 10s
      retries: 5
      start_period: 30s
    image: postgres:12
    networks:
      default: null
    ports:
      - mode: ingress
        target: 5432
        published: "5432"
        protocol: tcp
    restart: "no"
    volumes:
      - type: volume
        source: app-db-data
        target: /var/lib/postgresql/data/pgdata
        volume: {}
networks:
  default:
    name: pis-24z_default
volumes:
  app-db-data:
    name: pis-24z_app-db-data
  app-nosql-db-data:
    name: pis-24z_app-nosql-db-data
